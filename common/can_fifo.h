/*****************************************************************************
 * %LICENSE_DUAL%
 * <COPYRIGHT_TAG>
 *****************************************************************************/

#ifndef __CAN_FIFO_H__
#define __CAN_FIFO_H__

/******************************************************************************
 * Check if FIFO is empty.
 *****************************************************************************/
int can_fifo_empty(
	icp_can_handle_t	handle);

/******************************************************************************
 * Check if FIFO is full.
 *****************************************************************************/
int can_fifo_full(
	icp_can_handle_t	handle);

/******************************************************************************
 * Create a CAN messsage FIFO of size specifified.
 *****************************************************************************/
icp_can_handle_t can_fifo_create(
	unsigned int		num_nodes);

/******************************************************************************
 * Delete the FIFO.
 *****************************************************************************/
void can_fifo_destroy(
	icp_can_handle_t	handle);

/******************************************************************************
 * Get the first element of the FIFO.
 *****************************************************************************/
int can_fifo_get(
	icp_can_handle_t	handle, 
	icp_can_msg_t		*msg);

/******************************************************************************
 * Put a message into the FIFO.
 *****************************************************************************/
int can_fifo_put(
	icp_can_handle_t	handle, 
	icp_can_msg_t		*msg);

#endif /* __CAN_FIFO_H__ */
